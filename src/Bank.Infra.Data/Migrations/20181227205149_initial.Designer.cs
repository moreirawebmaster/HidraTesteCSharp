// <auto-generated />
using System;
using Bank.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bank.Infra.Data.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20181227205149_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bank.Domain.Entities.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Digito")
                        .HasColumnName("digito");

                    b.Property<int>("NumeroConta")
                        .HasColumnName("numero");

                    b.Property<decimal>("Saldo")
                        .HasColumnName("saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("contas_corrente");
                });

            modelBuilder.Entity("Bank.Domain.Entities.Extrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnName("conta_corrente_id");

                    b.Property<DateTime>("DataTransacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("data_transacao");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnName("saldo_anterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoAtual")
                        .HasColumnName("saldo_atual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoTransacao")
                        .IsRequired()
                        .HasColumnName("tipo_transacao")
                        .HasColumnType("char(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.ToTable("extratos");
                });

            modelBuilder.Entity("Bank.Domain.Entities.Extrato", b =>
                {
                    b.HasOne("Bank.Domain.Entities.ContaCorrente", "ContaCorrente")
                        .WithMany("Extratos")
                        .HasForeignKey("ContaCorrenteId")
                        .HasConstraintName("fk_contas_corrente_extrato")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
